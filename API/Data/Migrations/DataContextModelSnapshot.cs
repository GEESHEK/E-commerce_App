// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("API.Entities.Calibre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Calibres");
                });

            modelBuilder.Entity("API.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseMaterial")
                        .HasColumnType("integer");

                    b.Property<int>("Crystal")
                        .HasColumnType("integer");

                    b.Property<int?>("DialId")
                        .HasColumnType("integer");

                    b.Property<bool>("Lume")
                        .HasColumnType("boolean");

                    b.Property<int>("StrapBraceletMaterial")
                        .HasColumnType("integer");

                    b.Property<int?>("WatchCaseMeasurementsId")
                        .HasColumnType("integer");

                    b.Property<int>("WaterResistance")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DialId");

                    b.HasIndex("WatchCaseMeasurementsId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("API.Entities.Dial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Colour")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Colour")
                        .IsUnique();

                    b.ToTable("Dial");
                });

            modelBuilder.Entity("API.Entities.PowerReserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Duration")
                        .IsUnique();

                    b.ToTable("PowerReserves");
                });

            modelBuilder.Entity("API.Entities.Watch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("CaseId")
                        .HasColumnType("integer");

                    b.Property<int>("MovementType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OtherSpecifications")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<int>("WatchType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CaseId");

                    b.ToTable("Watches");
                });

            modelBuilder.Entity("API.Entities.WatchCaseMeasurements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Diameter")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<double>("LugWidth")
                        .HasColumnType("double precision");

                    b.Property<double>("Thickness")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("WatchCaseMeasurements");
                });

            modelBuilder.Entity("API.Entities.Case", b =>
                {
                    b.HasOne("API.Entities.Dial", "Dial")
                        .WithMany()
                        .HasForeignKey("DialId");

                    b.HasOne("API.Entities.WatchCaseMeasurements", "WatchCaseMeasurements")
                        .WithMany()
                        .HasForeignKey("WatchCaseMeasurementsId");

                    b.Navigation("Dial");

                    b.Navigation("WatchCaseMeasurements");
                });

            modelBuilder.Entity("API.Entities.Watch", b =>
                {
                    b.HasOne("API.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("API.Entities.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId");

                    b.Navigation("Brand");

                    b.Navigation("Case");
                });
#pragma warning restore 612, 618
        }
    }
}
